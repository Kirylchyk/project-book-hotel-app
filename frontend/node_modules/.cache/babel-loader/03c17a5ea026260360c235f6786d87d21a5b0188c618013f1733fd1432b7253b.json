{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nconst AuthorizationHandler = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function handleAuthorization() {\n      const path = window.location.pathname;\n      if (path.includes('/authorization/')) {\n        const userId = path.split('/authorization/')[1];\n        try {\n          const response = await fetch(`http://localhost:5000/authorization/${userId}`);\n          const data = await response.json();\n          if (data.message === 'User authorized successfully') {\n            localStorage.setItem('isLoggedIn', true);\n            localStorage.setItem('userEmail', data.user.email);\n            navigate('/logged-in');\n          } else {\n            navigate('/login');\n          }\n        } catch (error) {\n          console.error('Error handling authorization:', error);\n          navigate('/login');\n        }\n      }\n    }\n    handleAuthorization();\n  }, [navigate]);\n  return null;\n};\n_s(AuthorizationHandler, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthorizationHandler;\nexport default AuthorizationHandler;\nvar _c;\n$RefreshReg$(_c, \"AuthorizationHandler\");","map":{"version":3,"names":["useEffect","useNavigate","AuthorizationHandler","_s","navigate","handleAuthorization","path","window","location","pathname","includes","userId","split","response","fetch","data","json","message","localStorage","setItem","user","email","error","console","_c","$RefreshReg$"],"sources":["/home/varia/Desktop/project-book-hotel-app/frontend/src/components/AuthorizationHandler/AuthorizationHandler.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthorizationHandler = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        async function handleAuthorization() {\n            const path = window.location.pathname;\n            if (path.includes('/authorization/')) {\n                const userId = path.split('/authorization/')[1];\n                try {\n                    const response = await fetch(\n                        `http://localhost:5000/authorization/${userId}`,\n                    );\n                    const data = await response.json();\n                    if (data.message === 'User authorized successfully') {\n                        localStorage.setItem('isLoggedIn', true);\n                        localStorage.setItem('userEmail', data.user.email);\n                        navigate('/logged-in');\n                    } else {\n                        navigate('/login');\n                    }\n                } catch (error) {\n                    console.error('Error handling authorization:', error);\n                    navigate('/login');\n                }\n            }\n        }\n        handleAuthorization();\n    }, [navigate]);\n\n    return null;\n};\n\nexport default AuthorizationHandler;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAE9BD,SAAS,CAAC,MAAM;IACZ,eAAeK,mBAAmBA,CAAA,EAAG;MACjC,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;MACrC,IAAIH,IAAI,CAACI,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QAClC,MAAMC,MAAM,GAAGL,IAAI,CAACM,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,uCAAsCH,MAAO,EAAC,CAClD;UACD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;UAClC,IAAID,IAAI,CAACE,OAAO,KAAK,8BAA8B,EAAE;YACjDC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC;YACxCD,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC;YAClDjB,QAAQ,CAAC,YAAY,CAAC;UAC1B,CAAC,MAAM;YACHA,QAAQ,CAAC,QAAQ,CAAC;UACtB;QACJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrDlB,QAAQ,CAAC,QAAQ,CAAC;QACtB;MACJ;IACJ;IACAC,mBAAmB,EAAE;EACzB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI;AACf,CAAC;AAACD,EAAA,CA9BID,oBAAoB;EAAA,QACLD,WAAW;AAAA;AAAAuB,EAAA,GAD1BtB,oBAAoB;AAgC1B,eAAeA,oBAAoB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}